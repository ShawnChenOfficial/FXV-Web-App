@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@{
}
<!--Events-->
<style>


    .menu-divider-vertical {
        position: relative;
        top: 4.7px;
    }

    @@media(min-width:768px) {
        .list-item-img-block img {
            max-width: 145px !important;
            max-height: 88px !important;
            --width: calc(100vw * 0.1);
            height: calc(var(--width) * 0.6);
            width: var(--width) !important;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
        }
    }

    @@media(max-width:767px) {
        .list-item-img-block img {
            max-width: unset !important;
            max-height: unset !important;
            --width: calc(100vw * 0.23);
            height: calc(var(--width) * 0.6);
            width: var(--width) !important;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
        }
    }

    @@media(max-width:767px) {
        .col-md-show {
            display: none;
        }

        .col-md-hide {
            display: block;
        }

        .list-item-img-block {
            display: none;
        }
    }

    @@media(min-width:768px) {
        .col-md-show {
            display: block;
        }

        .col-md-hide {
            display: none;
        }

        .list-item-img-block {
            display: block;
        }
    }

    @@media(max-width:575px) {
        .list-item-category-block {
            display: none;
        }

        .list-item-block-sm-hide {
            display: none;
        }

        .list-item-block-sm-show {
            display: block;
        }
    }

    @@media(min-width:576px) {
        .list-item-category-block {
            display: block;
        }

        .list-item-block-sm-hide {
            display: block;
        }

        .list-item-block-sm-show {
            display: none;
        }
    }

    @@media(min-width:768px) {

        .list-item-block-md-hide {
            display: none;
        }

        .list-item-block-md-show {
            display: block;
        }
    }

    @@media(max-width:767px) {

        .list-item-block-md-hide {
            display: block;
        }

        .list-item-block-md-show {
            display: none;
        }
    }

    .list-item-expend {
        height: auto;
        transform: scaleY(1);
        transition: transform 0.5s cubic-bezier(0.1, 0.4, 0.6, 1);
    }

    .list-item-expend-hide {
        transform: scaleY(0);
        transition: transform 0s cubic-bezier(0.1, 0.4, 0.6, 1);
        max-height: 0;
    }

    .text-event-pending {
        color: #6DFD30;
    }

    .text-event-started {
        color: #FF0000;
    }

    .text-event-closed {
        color: #B2B2B2;
    }

    .carousel-caption {
        bottom: 0 !important;
    }

    .carousel-item {
        width: 60%;
        margin-left: 20%;
    }

        .carousel-item img {
            --width: 57vw;
            height: calc(var(--width) * 0.6) !important;
            width: var(--width) !important;
        }

    .slider-to-right {
        right: -5px;
    }
</style>
<div id="deleteConfirmPopUp" class="modal">
    <!-- Modal content -->
    <fieldset class="mt-5 col-10 offset-1">
        <legend class="text-FXV text-center w-auto font-2rem medium-bold-400">Delete</legend>
        <h3 class="text-FXV medium-bold-400 text-center pt-2 pb-5">Are you sure?</h3>
        <div class="mb-4 text-center text-capitalize">
            <button class="btn btn-outline-secondary mr-5 medium-bold-400" id="deleteConfirm">Yes</button>
            <button class="btn btn-outline-secondary ml-5 medium-bold-400" id="deleteCancel">No,Take me back</button>
        </div>
    </fieldset>
</div>
<div class="content p-0 mt-3">
    <div class="container-fluid pb-2 list-item-block-md-show">
        <h2 class="medium-bold text-center font-weight-bold text-FXV mb-5">Upcoming Events</h2>
        <div id="eventSliders" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <div class="position-absolute">
                        <h4 class="text-center text-FXV pt-1 pb-1 bg-dark event-time">12:00 pm</h4>
                        <h4 class="text-center text-FXV date-triangle"></h4>
                        <h4 class="text-center text-FXV pt-1 pb-1 bg-dark event-date">29 Sep, 2020</h4>
                    </div>
                    <div class="position-absolute slider-to-right mt-4">
                        <h4 class="text-center text-FXV pt-1 pb-1"><span class="font-weight-bold">23</span> Registered</h4>
                    </div>
                    <img src="/sources/img/Nov_design_notes.png" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block text-right text-FXV position-absolute slider-to-right pb-0">
                        <h3 class="font-weight-bold mb-0">Event Name</h3>
                        <p class="mb-1">
                            <span class="material-icons text-white">
                                location_on
                            </span>
                            Location
                        </p>
                    </div>
                </div>
                <div class="carousel-item">
                    <div class="position-absolute">
                        <h4 class="text-center text-FXV pt-1 pb-1 bg-dark event-time">12:00 pm</h4>
                        <h4 class="text-center text-FXV date-triangle"></h4>
                        <h4 class="text-center text-FXV pt-1 pb-1 bg-dark event-date">29 Sep, 2020</h4>
                    </div>
                    <div class="position-absolute slider-to-right mt-4">
                        <h4 class="text-center text-FXV pt-1 pb-1"><span class="font-weight-bold">23</span> Registered</h4>
                    </div>
                    <img src="/sources/img/bg_login.jpg" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block text-right text-FXV position-absolute slider-to-right pb-0">
                        <h3 class="font-weight-bold mb-0">Event Name</h3>
                        <p class="mb-1">
                            <span class="material-icons text-white">
                                location_on
                            </span>
                            Location
                        </p>
                    </div>
                </div>
                <div class="carousel-item">
                    <div class="position-absolute">
                        <h4 class="text-center text-FXV pt-1 pb-1 bg-dark event-time">12:00 pm</h4>
                        <h4 class="text-center text-FXV date-triangle"></h4>
                        <h4 class="text-center text-FXV pt-1 pb-1 bg-dark event-date">29 Sep, 2020</h4>
                    </div>
                    <div class="position-absolute slider-to-right mt-4">
                        <h4 class="text-center text-FXV pt-1 pb-1"><span class="font-weight-bold">23</span> Registered</h4>
                    </div>
                    <img src="/sources/img/Logo.png" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block text-right text-FXV position-absolute slider-to-right pb-0">
                        <h3 class="font-weight-bold mb-0">Event Name</h3>
                        <p class="mb-1">
                            <span class="material-icons text-white">
                                location_on
                            </span>
                            Location
                        </p>
                    </div>
                </div>
            </div>
            <a class="carousel-control-prev" href="#eventSliders" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#eventSliders" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
    <div class="container pb-5">
        <h3 class="medium-bold text-left font-weight-bold text-white">All Events</h3>
        <div id="event-menu" class="row container">
            <div class="mt-1">
                <input v-on:keyup="Search()" v-model="SearchText"  placeholder="Search Name..." />
            </div>
            <span class="text-muted font-2rem ml-2 mr-2 menu-divider-vertical">|</span>
            <div class="mt-1">
                <label>Start</label>
                <input class="mr-2" type="date" placeholder="Start Date..." />
            </div>
            <div class="mt-1">
                <label>End</label>
                <input type="date" placeholder="End Date..." />
            </div>
            @if ((await AuthorizationService.AuthorizeAsync(User, "Admin")).Succeeded)
            {
                <span class="text-muted font-2rem ml-2 mr-2 menu-divider-vertical">|</span>
                <div>
                    <a class="btn btn-secondary pt-1 pb-1 text-capitalize" v-on:click="AddEvent()">Add</a>
                </div>
            }
        </div>
        <div class="mt-4 list" id="eventlist">
            <div is="event-element" v-for='list in lists' v-bind:key='list.id' v-bind:eventname="list.eventname" v-bind:location="list.location"
                 v-bind:img_path="list.img_path" v-bind:date="list.date" v-bind:time="list.time" v-bind:status="list.status"
                 v-bind:registered_num="list.registered_num" v-bind:pending="list.pending"
                 v-bind:started="list.started" v-bind:closed="list.closed" v-bind:details="list.details"
                 v-bind:arrow_down="list.arrow_down" v-bind:arrow_up="list.arrow_up" v-bind:detail_hide="list.detail_hide" v-on:get_detail="GetDetail(list.eventid,list, $event)" v-on:get_event_info="GetEventInfo(list.eventid)"></div>
            <p id="more" class="m-auto text-center text-white pt-3 pointer" v-on:click.self.prevent="hasMore && LoadMore()">More</p>
        </div>
    </div>
</div>
<script>
    Vue.component('event-element', {
        template: '\
            <div class= "list-item" v-on:click="$emit(\'get_event_info\')">\
            <div class="row">\
                <div class="col-lg-2 col-md-3 col-0 list-item-img-block">\
                    <img v-bind:src="img_path">\
            </div>\
                    <div class="col-lg-8 offset-lg-0 col-md-7 offset-md-0 col-sm-8 offset-sm-1 col-12 offset-0 pb-2">\
                        <h3 class="text-FXV mt-2">{{eventname}}</h3>\
                        <div class="row text-white">\
                            <p class="col-12 mb-2">\
                                <span class="material-icons mr-1" style="float:left;line-height: 19px;font-size: 19px;">\
                                    location_on\
                        </span> {{location}}\
                    </p>\
                            <p class="col-xl-3 col-lg-4 col-md-6 col-sm-7 col-12">\
                                <span class="text-muted">\
                                    Date:\
                        </span> {{date}}\
                    </p>\
                            <p class="col-xl-3 col-lg-4 col-md-6 col-sm-5 col-12">\
                                <span class="text-muted">\
                                    Time:\
                        </span> {{time}}\
                    </p>\
                        </div>\
                    </div>\
                    <div class="col-md-2 col-sm-3 col-12 text-right medium-bold text-FXV list-item-block-sm-hide">\
                        <p class="text-muted mt-2"><span class="text-FXV font-x-large medium-bold-400">{{registered_num}}</span> Registered</p>\
                        <p v-bind:class="{\'font-weight-bold\': true, \'font-x-large\':true, \'text-event-pending\': pending, \'text-event-started\': started, \'text-event-closed\': closed }">{{status}}</p>\
                    </div>\
                    <div class="col-12 medium-bold text-FXV list-item-block-sm-show pb-4">\
                        <p v-bind:class="{\'font-weight-bold\': true, \'font-x-large\':true, \'text-event-pending\': pending, \'text-event-started\': started, \'text-event-closed\': closed }">{{status}}</p>\
                    </div>\
                </div>\
                <div v-bind:class="{\'list-item-extend\': true, \'list-item-extend-hide\': detail_hide, \'pl-5\':true, \'pr-5\':true}">\
                    <div class="border-top w-100 pb-2"></div>\
                    <div is="list-item-extend" v-for="detail in details" v-bind:key="detail.id" v-bind:combinename="detail.combinename" v-bind:tests="detail.tests"></div>\
                    <p class="loading m-auto text-center text-white pt-3 pointer pb-5" >Loading...<img style="width: 2rem; height: 2rem; margin-left:1rem" src="/sources/img/loading.gif" alt="loading..."/></p>\
                </div>\
                <span v-bind:class="{\'material-icons\':true, \'text-white\':true, \'list-item-arrow-down\': arrow_down, \'list-item-arrow-up\':arrow_up}" v-on:click="$emit(\'get_detail\', $event)" v-on:click.stop="">\
                  keyboard_arrow_down\
              </span>\
         </div>\
        ',
        props:['img_path','eventname','location','date','time','status','registered_num','pending','started','closed','arrow_up','arrow_down','detail_hide','details'],
    });

    var vueEventList = new Vue({
        el: "#eventlist",
        data: {
            last_id: 0,
            num: 10,
            url_event_list: '/api/GetEventList',
            url_event_combine_detail: '/api/GetEventCombineDetail',
            url_event_info:'/EventInfo/EventInfo',
            lists: [],
            nextToDoId: 0,
            hasMore: true,
        },
        mounted() {
            this.LoadMore();
        },
        computed: {

        },
        methods: {
            Freshable: function () {
                return this.hasMore;
            },
            LoadMore: function () {
                if (this.hasMore) {
                    $('#more').html('Loading...<img style="width: 2rem; height: 2rem; margin-left:1rem" src="/sources/img/loading.gif" alt=""/>');
                    axios.get(this.url_event_list + "/" + this.num + "/" + this.last_id)
                        .then(response => {
                            var str = response.data.toString();
                            if (str.indexOf("<!--This is the login layout-->") == 0) {
                                alert("The system detects that you have not operated for a long time, please login again");
                                document.clear();
                                location.reload();
                            }
                            else {
                                var json = JSON.parse(response.data);

                                $.each(json, function (index, item) {
                                    vueEventList.lists.push({
                                        id: vueEventList.nextToDoId++,
                                        eventid: item.EventId,
                                        eventname: item.Name,
                                        status: item.Status,
                                        img_path: item.Img_Path,
                                        location: item.Location,
                                        date: item.Date,
                                        time: item.Time,
                                        registered_num: item.Registered,
                                        combine_name: item.Combine_Name,
                                        pending: (item.Status == "Pending"),
                                        started: (item.Status == "Started"),
                                        closed: (item.Status == "Closed"),
                                        arrow_up: false,
                                        arrow_down: true,
                                        detail_hide: true,
                                        details:[],
                                    });
                                    vueEventList.last_id = (item.EventId > vueEventList.last_id) ? item.EventId : vueEventList.last_id;
                                });


                                if (json.length < 10) {
                                    $('#more').attr('disabled', 'true').removeClass('text-white').addClass('text-muted').html("No more");
                                    vueCombineList.hasMore = false;
                                }
                                else {
                                    $('#more').removeAttr('disabled').removeClass('text-muted').addClass('text-white').html("More...");
                                    vueCombineList.hasMore = true;
                                }
                            }
                        }).catch(error => {
                            $("#body-content").html(error.response);
                        })
                }
            },
            GetDetail: function (e_id, list, event) {

                if (list.arrow_down && !list.arrow_up) {

                    $.each(vueEventList.lists, function (index, item) {
                        item.arrow_down = true;
                        item.arrow_up = false;
                        item.detail_hide = true;
                    })

                    list.arrow_down = !list.arrow_down;
                    list.arrow_up = !list.arrow_up;
                    list.detail_hide = !list.detail_hide;

                    axios.get(this.url_event_combine_detail + '/' + e_id)
                        .then(response => {
                            var str = response.data.toString();
                            if (str.indexOf("<!--This is the login layout-->") == 0) {
                                alert("The system detects that you have not operated for a long time, please login again");
                                document.clear();
                                location.reload();
                            }
                            else {
                                var json = JSON.parse(response.data);
                                list.details.pop();
                                list.details.push({
                                    id:1,
                                    tests: json.TestNames,
                                    combinename: json.Combine_Name
                                });
                                $(event.target).parent().find('.list-item-extend').find('.loading').attr('hidden', 'hidden');
                            }
                        })
                        .catch(error => {
                            $("#body-content").html(error.response);
                        })
                }
                else if (!list.arrow_down && list.arrow_up) {
                    list.arrow_down = !list.arrow_down;
                    list.arrow_up = !list.arrow_up;
                    list.detail_hide = !list.detail_hide;
                    $(event.target).parent().find('.list-item-extend').find('.loading').removeAttr('hidden', 'hidden');
                }
            },
            GetEventInfo: function (e_id) {
                var params = new URLSearchParams();
                params.append('id', e_id);

                axios.get(this.url_event_info, {
                    params: params
                })
                    .then(response => {
                        var str = response.data.toString();
                        if (str.indexOf("<!--This is the login layout-->") == 0) {
                            alert("The system detects that you have not operated for a long time, please login again");
                            document.clear();
                            location.reload();
                        }
                        else {
                            $('#body-content').html(response.data);
                        }
                    })
                    .catch(error => {
                        $("#body-content").html(error.response);
                    });
            }
        }
    });

    Vue.component('list-item-extend', {
        template: '\
        <div class="row pb-4">\
            <!--specification-->\
            <div class="col-12 text-center text-white ml-0 mr-0 pl-0 pr-0">\
            <div class="row col-12 text-left pb-2 ml-0 mr-0 pl-0 pr-0 text-center">\
               <p class="col-12 text-muted mt-4">Combine: <span class="text-FXV font-x-large font-weight-bold medium-bold-400">{{combinename}}</span></p>\
            </div>\
            </div>\
            <div class="col-12 text-center text-white pl-0 pr-0 pb-4">\
               <div class="row col-12 pr-0">\
                   <h3 class="col-12 text-white font-weight-bold mt-0">Tests</h3>\
                   <span v-if="tests.length == 0 || tests.length == 1" class="col-12 text-center text-muted">No Test</span>\
                   <span v-else-if="tests.length == 2" class="col-12 col-md-6" v-for="test in tests">{{test}}</span>\
                   <span v-else-if=" tests.length > 2 " class="col-12 col-md-6 col-lg-4" v-for="test in tests">{{test}}</span>\
               </div>\
            </div>\
         </div>\
        ',
        props: ['combinename', 'tests']
    });

    var vueEventMenu = new Vue({
        el: "#event-menu",
        data: {
            url_Search: '/api/GetEventsByName',
            url_Add: '/Events/Create',
            SearchText: '',
        },
        watch: {
            SearchText: 'CheckSearchText',
        },
        methods: {
            CheckSearchText: function () {
                this.SearchText = this.SearchText.toString().replace(/[\\/<>'"]/g, '');
            },
            AddEvent: function () {
                axios.get(this.url_Add)
                    .then(response => {
                        var str = response.data.toString();
                        if (str.indexOf("<!--This is the login layout-->") == 0) {
                            alert("The system detects that you have not operated for a long time, please login again");
                            document.clear();
                            location.reload();
                        }
                        else {
                            $('#body-content').html(response.data);
                        }
                    })
                    .catch(error => {
                        $("#body-content").html(error.response);
                    });
            },
            Search: _.debounce(
                function () {
                    $('#more').html('Loading...<img style="width: 2rem; height: 2rem; margin-left:1rem" src="/sources/img/loading.gif" alt=""/>');
                    vueEventList.lists = [];

                    if (this.SearchText == "") {
                        vueEventList.last_id = 0;
                        vueEventList.hasMore = true;
                        vueEventList.LoadMore();
                    }
                    else {
                        this.SendSearchRequest();
                    }
                }, 500),
            SendSearchRequest: function () {

                axios.get(this.url_Search + '/' + this.SearchText)
                    .then(response => {
                        var str = response.data.toString();
                        if (str.indexOf("<!--This is the login layout-->") == 0) {
                            alert("The system detects that you have not operated for a long time, please login again");
                            document.clear();
                            location.reload();
                        }
                        else {
                            var json = JSON.parse(response.data);
                            $.each(json, function (index, item) {
                                vueEventList.lists.push({
                                    id: vueEventList.nextToDoId++,
                                    eventid: item.EventId,
                                    eventname: item.Name,
                                    status: item.Status,
                                    img_path: item.Img_Path,
                                    location: item.Location,
                                    date: item.Date,
                                    time: item.Time,
                                    registered_num: item.Registered,
                                    combine_name: item.Combine_Name,
                                    pending: (item.Status == "Pending"),
                                    started: (item.Status == "Started"),
                                    closed: (item.Status == "Closed"),
                                    arrow_up: false,
                                    arrow_down: true,
                                    detail_hide: true,
                                    details: [],
                                });
                            });


                            $('#more').attr('disabled', 'true').removeClass('text-white').addClass('text-muted').html("No more");
                            vueEventList.hasMore = true;
                        }
                    }).catch(error => {
                        $("#body-content").html(error.response);
                    })
            }
        }
    });
</script>
